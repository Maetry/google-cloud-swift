#!/usr/bin/env swift

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google Cloud
// –°–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏ Google

import Foundation

print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google Cloud\n")

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê 1: Service Account JWT Assertion (AIP-4112)
// –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è: https://google.aip.dev/auth/4112
// ============================================================================

print("‚úÖ –ü–†–û–í–ï–†–ö–ê 1: Service Account JWT Assertion")
print("–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è: https://google.aip.dev/auth/4112\n")

let serviceAccountChecks = """
üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è Google AIP-4112:

1. JWT Payload –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
   ‚úì iss (issuer) - email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
   ‚úì aud (audience) - "https://oauth2.googleapis.com/token"
   ‚úì exp (expiration) - iat + –º–∞–∫—Å–∏–º—É–º 3600 —Å–µ–∫—É–Ω–¥ (1 —á–∞—Å)
   ‚úì iat (issued at) - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ Unix timestamp
   ‚úì sub (subject) - email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–¥–ª—è domain-wide delegation)
   ‚úì scope - OAuth scopes, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏

2. JWT Header –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
   ‚úì alg: "RS256"
   ‚úì typ: "JWT"
   ‚úì kid: private_key_id –∏–∑ service account JSON

3. –ü–æ–¥–ø–∏—Å—å:
   ‚úì –ê–ª–≥–æ—Ä–∏—Ç–º: RS256 (RSA Signature with SHA-256)
   ‚úì –ö–ª—é—á: private_key –∏–∑ service account JSON

4. –ó–∞–ø—Ä–æ—Å –∫ OAuth endpoint:
   POST https://oauth2.googleapis.com/token
   Content-Type: application/x-www-form-urlencoded
   
   Body:
   grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=[JWT]

5. –û—Ç–≤–µ—Ç –æ—Ç Google:
   {
     "access_token": "ya29.c.Ko8B...",
     "token_type": "Bearer",
     "expires_in": 3600
   }

üìù –¢–ï–ö–£–©–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø (ServiceAccountCredentialsProvider.swift):

‚úÖ JWT Payload:
   - iss: credentials.clientEmail ‚úì
   - aud: "https://oauth2.googleapis.com/token" ‚úì
   - exp: Date() + 3600 ‚úì
   - iat: Date() ‚úì
   - sub: credentials.clientEmail ‚úì
   - scope: scope.map(\\.value).joined(separator: " ") ‚úì

‚úÖ JWT Signature:
   - –ê–ª–≥–æ—Ä–∏—Ç–º: JWTSigner.rs256(key: privateKey) ‚úì
   - kid: credentials.privateKeyId ‚úì

‚úÖ OAuth Request:
   - URL: credentials.tokenUri ("https://oauth2.googleapis.com/token") ‚úì
   - Method: POST ‚úì
   - Content-Type: application/x-www-form-urlencoded ‚úì
   - Body: grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=[JWT] ‚úì

‚úÖ Token Caching:
   - Expires: expiresIn - 300 (5 –º–∏–Ω—É—Ç –±—É—Ñ–µ—Ä) ‚úì
   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º: expiration >= Date() ‚úì

‚úÖ Actor –¥–ª—è –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚úì

üéØ –í–´–í–û–î: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç AIP-4112 ‚úÖ
"""

print(serviceAccountChecks)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê 2: Self-Signed JWT (AIP-4111)
// –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è: https://google.aip.dev/auth/4111
// ============================================================================

print("‚úÖ –ü–†–û–í–ï–†–ö–ê 2: Self-Signed JWT (–±–µ–∑ OAuth exchange)")
print("–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è: https://google.aip.dev/auth/4111\n")

let selfSignedChecks = """
üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è Google AIP-4111:

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ scope –ù–ï —É–∫–∞–∑–∞–Ω (scope.isEmpty == true)
–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ roundtrip –∫ OAuth server

1. JWT Payload:
   ‚úì iss - service account email
   ‚úì sub - service account email
   ‚úì aud - URL —Å–µ—Ä–≤–∏—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "https://storage.googleapis.com/")
   ‚úì exp - iat + –º–∞–∫—Å–∏–º—É–º 3600 —Å–µ–∫—É–Ω–¥
   ‚úì iat - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è

2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
   - JWT –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ access_token
   - –ù–ï–¢ –∑–∞–ø—Ä–æ—Å–∞ –∫ oauth2.googleapis.com/token
   - –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è Google APIs

üìù –¢–ï–ö–£–©–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø:

‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: if scope.isEmpty
‚úÖ Payload —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
‚úÖ –ü–æ–¥–ø–∏—Å—å: RS256 —Å kid
‚úÖ –¢–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ OAuth exchange
‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ expiration - 300 —Å–µ–∫—É–Ω–¥

‚ö†Ô∏è  –ó–ê–ú–ï–ß–ê–ù–ò–ï: –í –∫–æ–¥–µ –µ—Å—Ç—å –ø—É—Ç–∞–Ω–∏—Ü–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:
   "Otherwise we self sign a JWT if no explicit scope was provided"
   –ù–æ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!

üéØ –í–´–í–û–î: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç AIP-4111 ‚úÖ
"""

print(selfSignedChecks)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê 3: Compute Engine Metadata Server
// –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://cloud.google.com/compute/docs/metadata/overview
// ============================================================================

print("‚úÖ –ü–†–û–í–ï–†–ö–ê 3: Compute Engine Metadata Server")
print("–î–ª—è Cloud Run, Compute Engine, GKE\n")

let metadataServerChecks = """
üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è Google Cloud:

1. Metadata Server URL:
   - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π: http://metadata.google.internal
   - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π: http://169.254.169.254
   - –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ env: GCE_METADATA_HOST

2. Token Endpoint:
   GET http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token
   
   Query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
   - scopes (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) - —Å–ø–∏—Å–æ–∫ scopes —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é

3. Headers:
   ‚úì –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: Metadata-Flavor: Google
   (–ó–∞—â–∏—Ç–∞ –æ—Ç SSRF –∞—Ç–∞–∫)

4. –û—Ç–≤–µ—Ç:
   {
     "access_token": "ya29.c...",
     "expires_in": 3599,
     "token_type": "Bearer"
   }

5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:
   - Ping metadata server —Å timeout ~500ms
   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å header "Metadata-Flavor: Google" –≤ –æ—Ç–≤–µ—Ç–µ

üìù –¢–ï–ö–£–©–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø (ComputeEngineCredentialsProvider.swift):

‚úÖ Metadata Server URL:
   - Default: http://metadata.google.internal ‚úì
   - Env override: GCE_METADATA_HOST ‚úì

‚úÖ Token Endpoint:
   - Path: /computeMetadata/v1/instance/service-accounts/default/token ‚úì
   - Query: ?scopes=[scopes] ‚úì
   - Scopes format: comma-separated ‚úì

‚úÖ Headers:
   - Metadata-Flavor: Google ‚úì

‚úÖ Availability Check (CredentialsResolver):
   - 5 –ø–æ–ø—ã—Ç–æ–∫ —Å timeout 500ms ‚úì
   - –ü—Ä–æ–≤–µ—Ä–∫–∞ header "Metadata-Flavor: Google" ‚úì
   - Env variable NO_GCE_CHECK –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è ‚úì

‚úÖ Token Caching:
   - Expires: expiresIn - 30 (30 —Å–µ–∫—É–Ω–¥ –±—É—Ñ–µ—Ä) ‚úì

üéØ –í–´–í–û–î: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ‚úÖ
"""

print(metadataServerChecks)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê 4: GCloud Authorized User (Application Default Credentials)
// ============================================================================

print("‚úÖ –ü–†–û–í–ï–†–ö–ê 4: GCloud Authorized User Credentials")
print("–î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å 'gcloud auth application-default login'\n")

let gcloudChecks = """
üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è Google Cloud:

1. –§–∞–π–ª credentials:
   –õ–æ–∫–∞—Ü–∏—è: ~/.config/gcloud/application_default_credentials.json
   
   –§–æ—Ä–º–∞—Ç:
   {
     "type": "authorized_user",
     "client_id": "...",
     "client_secret": "...",
     "refresh_token": "...",
     "quota_project_id": "..."
   }

2. Refresh Token Flow:
   POST https://oauth2.googleapis.com/token
   Content-Type: application/x-www-form-urlencoded
   Headers: X-Goog-User-Project: [quota_project_id]
   
   Body:
   client_id=[client_id]&
   client_secret=[client_secret]&
   refresh_token=[refresh_token]&
   grant_type=refresh_token

3. –û—Ç–≤–µ—Ç:
   {
     "access_token": "ya29...",
     "expires_in": 3599,
     "scope": "...",
     "token_type": "Bearer"
   }

üìù –¢–ï–ö–£–©–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø (GCloudCredentialsProvider.swift):

‚úÖ Endpoint: https://oauth2.googleapis.com/token ‚úì
‚úÖ Method: POST ‚úì
‚úÖ Content-Type: application/x-www-form-urlencoded ‚úì
‚úÖ Header: X-Goog-User-Project: credentials.quotaProjectId ‚úì
‚úÖ Body parameters: –≤—Å–µ 4 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç ‚úì
‚úÖ Token caching: expiresIn - 300 —Å–µ–∫—É–Ω–¥ ‚úì
‚úÖ Key decoding: convertFromSnakeCase ‚úì

üéØ –í–´–í–û–î: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ‚úÖ
"""

print(gcloudChecks)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê 5: Credentials Resolution Order
// ============================================================================

print("‚úÖ –ü–†–û–í–ï–†–ö–ê 5: –ü–æ—Ä—è–¥–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è credentials (ADC)")
print("Application Default Credentials - —Å—Ç–∞–Ω–¥–∞—Ä—Ç Google\n")

let adcOrderChecks = """
üìã –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ ADC –æ—Ç Google:

1. GOOGLE_APPLICATION_CREDENTIALS env variable
2. gcloud auth application-default credentials (~/.config/gcloud/...)
3. Compute Engine metadata server
4. Cloud Run metadata server
5. App Engine metadata server

üìù –¢–ï–ö–£–©–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø (CredentialsResolver):

Strategy .environment:
  1. ‚úì –ü—Ä–æ–≤–µ—Ä—è–µ—Ç GOOGLE_APPLICATION_CREDENTIALS env
  2. ‚úì Fallback –Ω–∞ ~/.config/gcloud/application_default_credentials.json
  3. ‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø (gcloud vs serviceAccount)

Strategy .environmentJSON:
  ‚úì –ó–∞–≥—Ä—É–∂–∞–µ—Ç JSON –Ω–∞–ø—Ä—è–º—É—é –∏–∑ GOOGLE_APPLICATION_CREDENTIALS

Strategy .computeEngine:
  1. ‚úì –ü—Ä–æ–≤–µ—Ä—è–µ—Ç NO_GCE_CHECK env (–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–∏—Ç—å)
  2. ‚úì –ü–æ–¥–¥–µ—Ä–∂–∫–∞ GCE_METADATA_HOST override
  3. ‚úì Ping metadata server —Å 5 retry
  4. ‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ Metadata-Flavor header
  5. ‚úì Timeout 500ms –Ω–∞ –ø–æ–ø—ã—Ç–∫—É

Strategy .filePath:
  ‚úì –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

üéØ –í–´–í–û–î: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ADC —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É ‚úÖ
"""

print(adcOrderChecks)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –ü–†–û–í–ï–†–ö–ê 6: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ Best Practices
// ============================================================================

print("‚úÖ –ü–†–û–í–ï–†–ö–ê 6: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ Best Practices\n")

let securityChecks = """
üìã Google Cloud Security Best Practices:

1. Token Expiration Buffer:
   ‚úì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –æ–±–Ω–æ–≤–ª—è—Ç—å —Ç–æ–∫–µ–Ω –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
   ‚úì –†–µ–∞–ª–∏–∑–∞—Ü–∏—è: 
     - ServiceAccount: expiresIn - 300 (5 –º–∏–Ω—É—Ç) ‚úÖ
     - ComputeEngine: expiresIn - 30 (30 —Å–µ–∫—É–Ω–¥) ‚úÖ
     - GCloud: expiresIn - 300 (5 –º–∏–Ω—É—Ç) ‚úÖ

2. Actor –¥–ª—è Concurrency:
   ‚úì –í—Å–µ providers - —ç—Ç–æ actors ‚úÖ
   ‚úì –ü–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ ‚úÖ
   ‚úì Race condition –∑–∞—â–∏—Ç–∞ ‚úÖ

3. Timeout –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
   ‚úì OAuth requests: 10 —Å–µ–∫—É–Ω–¥ ‚úÖ
   ‚úì Metadata ping: 500ms (5 –ø–æ–ø—ã—Ç–æ–∫) ‚úÖ
   ‚úì Storage API: 60 —Å–µ–∫—É–Ω–¥ ‚úÖ

4. Error Handling:
   ‚úì GoogleCloudOAuthError –¥–ª—è OAuth –æ—à–∏–±–æ–∫ ‚úÖ
   ‚úì CredentialLoadError –¥–ª—è –ø—Ä–æ–±–ª–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ ‚úÖ
   ‚úì –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ API ‚úÖ

5. Private Key –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
   ‚úì –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ‚úÖ
   ‚úì –•—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ provider (actor - private) ‚úÖ
   ‚úì –ù–µ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è ‚úÖ

6. Response Size Limits:
   ‚úì OAuth response: 1 MB ‚úÖ
   ‚úì Metadata response: 1 MB ‚úÖ
   ‚úì Storage data: 100 MB ‚úÖ

üéØ –í–´–í–û–î: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–µ–¥—É–µ—Ç best practices ‚úÖ
"""

print(securityChecks)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
// ============================================================================

print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –ü–†–û–í–ï–†–ö–ò\n")

let summary = """
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏                            ‚îÇ –°—Ç–∞—Ç—É—Å  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1. Service Account JWT (AIP-4112)                   ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - JWT payload format                             ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - OAuth2 token exchange                          ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - RS256 signature                                ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Token caching (55 –º–∏–Ω)                         ‚îÇ   ‚úÖ    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 2. Self-Signed JWT (AIP-4111)                       ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Direct JWT usage                               ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - No OAuth exchange                              ‚îÇ   ‚úÖ    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 3. Compute Engine Metadata Server                   ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Endpoint: metadata.google.internal             ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Header: Metadata-Flavor: Google                ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Availability check (5 retries)                 ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Token caching                                  ‚îÇ   ‚úÖ    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 4. GCloud Authorized User                           ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Refresh token flow                             ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - X-Goog-User-Project header                     ‚îÇ   ‚úÖ    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 5. Credentials Resolution (ADC)                     ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - GOOGLE_APPLICATION_CREDENTIALS                 ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Auto-detect credential type                    ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Fallback chain                                 ‚îÇ   ‚úÖ    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 6. Security & Best Practices                        ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Actor concurrency                              ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Token expiration buffer                        ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Error handling                                 ‚îÇ   ‚úÖ    ‚îÇ
‚îÇ    - Timeout configuration                          ‚îÇ   ‚úÖ    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üéâ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ ‚úÖ

–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç:
- Google AIP-4111 (Self-signed JWT)
- Google AIP-4112 (Service Account OAuth2)
- Google Cloud Metadata Server specification
- Application Default Credentials (ADC) standard
- Google Cloud Security Best Practices
"""

print(summary)
print("\n" + String(repeating: "=", count: 80) + "\n")

// ============================================================================
// –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
// ============================================================================

print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø PRODUCTION\n")

let recommendations = """
1. ‚úÖ –î–õ–Ø CLOUD RUN (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
   
   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .computeEngine —Å—Ç—Ä–∞—Ç–µ–≥–∏—é:
   
   let storage = try await GoogleCloudStorageClient(
       strategy: .computeEngine(client: httpClient),
       client: httpClient,
       scope: [.fullControl]
   )
   
   –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
   - –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ —Å –∫–ª—é—á–∞–º–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è credentials
   - –ë—ã—Å—Ç—Ä–µ–µ (–ª–æ–∫–∞–ª—å–Ω—ã–π metadata server)
   - Audit logs –∏–∑ –∫–æ—Ä–æ–±–∫–∏

2. ‚úÖ –î–õ–Ø –õ–û–ö–ê–õ–¨–ù–û–ô –†–ê–ó–†–ê–ë–û–¢–ö–ò:
   
   export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
   
   let storage = try await GoogleCloudStorageClient(
       strategy: .environment,
       client: httpClient,
       scope: [.fullControl]
   )

3. ‚ö†Ô∏è  –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨:

   a) Service Account –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ IAM —Ä–æ–ª–∏:
      - roles/storage.objectAdmin (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –æ–±—ä–µ–∫—Ç–∞–º)
      - roles/storage.admin (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ buckets)
   
   b) API –≤–∫–ª—é—á–µ–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ:
      - Cloud Storage API ‚úì
      - IAM Service Account Credentials API (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ IAM –º–æ–¥—É–ª—å)
   
   c) –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
      - GOOGLE_APPLICATION_CREDENTIALS (path –∏–ª–∏ JSON)
      - GOOGLE_PROJECT_ID –∏–ª–∏ PROJECT_ID
      - NO_GCE_CHECK=false (–¥–ª—è Cloud Run)

4. üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:

   –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:
   
   swift run TestAuth
"""

print(recommendations)
print("\n" + String(repeating: "=", count: 80) + "\n")

